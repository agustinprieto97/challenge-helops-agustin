name: Application Deploy

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
  push:
    branches:
      - 'main'

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
  TF_WORKSPACE: "helops-test" 
  CONFIG_DIRECTORY: "./terraform"

#using-an-action
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set_output.outputs.short_sha }}
    steps:
      # - name: Step
      #   run: export SHORT_SHA=${GITHUB_SHA::7}
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Obtener short SHA del commit
        id: set_output
        run: |
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: docker_image/
          push: true
          tags: ghcr.io/agustinprieto97/challenge-helops-agustin:${{env.SHORT_SHA}}
  
  terraform-cloud-apply-run:
    needs: build-and-push-image
    if: ${{ vars.AUTO_DEPLOY == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    # permissions:
    #   pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -var="tag_version=${{ needs.build-and-push-image.outputs.short_sha }}" -no-color
      # continue-on-error: true

    - name: Terraform Apply
      id: apply
      run: terraform apply -var="tag_version=${{ needs.build-and-push-image.outputs.short_sha }}" -auto-approve