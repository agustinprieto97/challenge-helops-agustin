name: ci

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
  push:
    branches:
      - 'main'

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }} 
  TF_WORKSPACE: "helops-test" 
  CONFIG_DIRECTORY: "./terraform"

#using-an-action
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: docker_image/
          push: true
          tags: ghcr.io/agustinprieto97/challenge-helops-agustin:v1
     
  terraform-cloud-apply-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.2.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - uses: hashicorp/tfc-workflows-github/actions/create-run@v1.2.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}

      - uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.2.0
        id: apply
        if: ${{ fromJSON(steps.create-run.outputs.payload).data.attributes.actions.IsConfirmable }}
        with:
          run: ${{ steps.create-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

  # terraform:
  #   needs: build-and-push-image
  #   name: 'Terraform'
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./terraform
  #   env:
  #     TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  #     TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

  #   steps:
  #   - name: 'Checkout'
  #     uses: actions/checkout@v2

  #   - name: 'Setup Terraform'
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: latest

  #   - name: 'Terraform Init'
  #     run: terraform init

  #   - name: 'Terraform Apply'
  #     run: terraform apply -auto-approve
      